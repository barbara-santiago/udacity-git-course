{"cells":[{"cell_type":"code","execution_count":81,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9HBkyjfhbxbk","executionInfo":{"status":"ok","timestamp":1702211729657,"user_tz":180,"elapsed":44965,"user":{"displayName":"BÃ¡rbara Luiza Silva Santiago","userId":"07978789078714421546"}},"outputId":"9df95033-305f-41d6-88ee-bf76a42de451"},"outputs":[{"name":"stdout","output_type":"stream","text":["Hello! Let's explore some US bikeshare data!\n","\n","Choose a city (Chicago, New York City or Washington ): chicago\n","Do you want to filter the month? (yes or no)\n","no\n","Ok! No month filter will be used. \n","\n","Do you want to filter the day of the week? (yes or no)\n","no\n","Ok! No month filter will be used. \n","\n","\n","Calculating The Most Frequent Times of Travel...\n","\n","Most Popular month: 6\n","Most Popular day of week: june\n","Most Popular day of week: monday\n","Most Popular Start Hour: 17\n","\n","This took 0.20877575874328613 seconds.\n","------------------------------------------------------------\n","\n","Calculating The Most Popular Stations and Trip...\n","\n","Most commonly used start station: Streeter Dr & Grand Ave\n","Most commonly used end station: Streeter Dr & Grand Ave\n","Most commonly used combination of stations: Lake Shore Dr & Monroe St to Streeter Dr & Grand Ave\n","\n","This took 0.20012974739074707 seconds.\n","------------------------------------------------------------\n","\n","Calculating Trip Duration...\n","\n","The total travel time: 280871787\n","The mean travel time: 936.23929\n","\n","This took 0.0025589466094970703 seconds.\n","------------------------------------------------------------\n","\n","Calculating User Stats...\n","\n","Subscriber    238889\n","Customer       61110\n","Dependent          1\n","Name: User Type, dtype: int64\n","Male      181190\n","Female     57758\n","Name: Gender, dtype: int64\n","Earliest year of birth: 1899.0\n","Most recent year of birth: 2016.0\n","Most recent year of birth: 1989.0\n","\n","This took 0.056545257568359375 seconds.\n","------------------------------------------------------------\n","\n","Would you like to see the raw data? Enter yes or no.\n","yes\n","   Unnamed: 0          Start Time             End Time  Trip Duration  \\\n","0     1423854 2017-06-23 15:09:32  2017-06-23 15:14:53            321   \n","1      955915 2017-05-25 18:19:03  2017-05-25 18:45:53           1610   \n","2        9031 2017-01-04 08:27:49  2017-01-04 08:34:45            416   \n","3      304487 2017-03-06 13:49:38  2017-03-06 13:55:28            350   \n","4       45207 2017-01-17 14:53:07  2017-01-17 15:02:01            534   \n","\n","                   Start Station                   End Station   User Type  \\\n","0           Wood St & Hubbard St       Damen Ave & Chicago Ave  Subscriber   \n","1            Theater on the Lake  Sheffield Ave & Waveland Ave  Subscriber   \n","2             May St & Taylor St           Wood St & Taylor St  Subscriber   \n","3  Christiana Ave & Lawrence Ave  St. Louis Ave & Balmoral Ave  Subscriber   \n","4         Clark St & Randolph St  Desplaines St & Jackson Blvd  Subscriber   \n","\n","   Gender  Birth Year  month  day  commum_month  hour  \n","0    Male      1992.0      6    4             6    15  \n","1  Female      1992.0      5    3             5    18  \n","2    Male      1981.0      1    2             1     8  \n","3    Male      1986.0      3    0             3    13  \n","4    Male      1975.0      1    1             1    14  \n","\n","Would you like to see more? Enter yes or no.\n","yes\n","   Unnamed: 0          Start Time             End Time  Trip Duration  \\\n","0     1423854 2017-06-23 15:09:32  2017-06-23 15:14:53            321   \n","1      955915 2017-05-25 18:19:03  2017-05-25 18:45:53           1610   \n","2        9031 2017-01-04 08:27:49  2017-01-04 08:34:45            416   \n","3      304487 2017-03-06 13:49:38  2017-03-06 13:55:28            350   \n","4       45207 2017-01-17 14:53:07  2017-01-17 15:02:01            534   \n","5     1473887 2017-06-26 09:01:20  2017-06-26 09:11:06            586   \n","6      961916 2017-05-26 09:41:44  2017-05-26 09:46:25            281   \n","7       65924 2017-01-21 14:28:38  2017-01-21 14:40:41            723   \n","8      606841 2017-04-20 16:08:51  2017-04-20 16:20:20            689   \n","9      135470 2017-02-06 18:00:47  2017-02-06 18:09:00            493   \n","\n","                   Start Station                    End Station   User Type  \\\n","0           Wood St & Hubbard St        Damen Ave & Chicago Ave  Subscriber   \n","1            Theater on the Lake   Sheffield Ave & Waveland Ave  Subscriber   \n","2             May St & Taylor St            Wood St & Taylor St  Subscriber   \n","3  Christiana Ave & Lawrence Ave   St. Louis Ave & Balmoral Ave  Subscriber   \n","4         Clark St & Randolph St   Desplaines St & Jackson Blvd  Subscriber   \n","5   Clinton St & Washington Blvd           Canal St & Taylor St  Subscriber   \n","6          Ashland Ave & Lake St           Wood St & Hubbard St  Subscriber   \n","7     Larrabee St & Kingsbury St     Larrabee St & Armitage Ave    Customer   \n","8         Sedgwick St & Huron St  Halsted St & Blackhawk St (*)  Subscriber   \n","9   Stetson Ave & South Water St   Clinton St & Washington Blvd  Subscriber   \n","\n","   Gender  Birth Year  month  day  commum_month  hour  \n","0    Male      1992.0      6    4             6    15  \n","1  Female      1992.0      5    3             5    18  \n","2    Male      1981.0      1    2             1     8  \n","3    Male      1986.0      3    0             3    13  \n","4    Male      1975.0      1    1             1    14  \n","5    Male      1990.0      6    0             6     9  \n","6  Female      1983.0      5    4             5     9  \n","7     NaN         NaN      1    5             1    14  \n","8    Male      1984.0      4    3             4    16  \n","9    Male      1979.0      2    0             2    18  \n","\n","Would you like to see more? Enter yes or no.\n","yes\n","    Unnamed: 0          Start Time             End Time  Trip Duration  \\\n","0      1423854 2017-06-23 15:09:32  2017-06-23 15:14:53            321   \n","1       955915 2017-05-25 18:19:03  2017-05-25 18:45:53           1610   \n","2         9031 2017-01-04 08:27:49  2017-01-04 08:34:45            416   \n","3       304487 2017-03-06 13:49:38  2017-03-06 13:55:28            350   \n","4        45207 2017-01-17 14:53:07  2017-01-17 15:02:01            534   \n","5      1473887 2017-06-26 09:01:20  2017-06-26 09:11:06            586   \n","6       961916 2017-05-26 09:41:44  2017-05-26 09:46:25            281   \n","7        65924 2017-01-21 14:28:38  2017-01-21 14:40:41            723   \n","8       606841 2017-04-20 16:08:51  2017-04-20 16:20:20            689   \n","9       135470 2017-02-06 18:00:47  2017-02-06 18:09:00            493   \n","10      175805 2017-02-15 07:09:55  2017-02-15 07:14:56            301   \n","11       71678 2017-01-22 15:15:45  2017-01-22 15:31:02            917   \n","12       19061 2017-01-08 16:03:00  2017-01-08 16:07:37            277   \n","13     1023296 2017-05-30 15:46:18  2017-05-30 15:52:12            354   \n","14      611000 2017-04-20 19:26:33  2017-04-20 19:35:08            515   \n","\n","                     Start Station                      End Station  \\\n","0             Wood St & Hubbard St          Damen Ave & Chicago Ave   \n","1              Theater on the Lake     Sheffield Ave & Waveland Ave   \n","2               May St & Taylor St              Wood St & Taylor St   \n","3    Christiana Ave & Lawrence Ave     St. Louis Ave & Balmoral Ave   \n","4           Clark St & Randolph St     Desplaines St & Jackson Blvd   \n","5     Clinton St & Washington Blvd             Canal St & Taylor St   \n","6            Ashland Ave & Lake St             Wood St & Hubbard St   \n","7       Larrabee St & Kingsbury St       Larrabee St & Armitage Ave   \n","8           Sedgwick St & Huron St    Halsted St & Blackhawk St (*)   \n","9     Stetson Ave & South Water St     Clinton St & Washington Blvd   \n","10            Broadway & Barry Ave         Wilton Ave & Belmont Ave   \n","11  Southport Ave & Wellington Ave           Clark St & Schiller St   \n","12           Green St & Madison St         Ada St & Washington Blvd   \n","13      Larrabee St & Kingsbury St                Clark St & Elm St   \n","14           Canal St & Madison St  Racine Ave (May St) & Fulton St   \n","\n","     User Type  Gender  Birth Year  month  day  commum_month  hour  \n","0   Subscriber    Male      1992.0      6    4             6    15  \n","1   Subscriber  Female      1992.0      5    3             5    18  \n","2   Subscriber    Male      1981.0      1    2             1     8  \n","3   Subscriber    Male      1986.0      3    0             3    13  \n","4   Subscriber    Male      1975.0      1    1             1    14  \n","5   Subscriber    Male      1990.0      6    0             6     9  \n","6   Subscriber  Female      1983.0      5    4             5     9  \n","7     Customer     NaN         NaN      1    5             1    14  \n","8   Subscriber    Male      1984.0      4    3             4    16  \n","9   Subscriber    Male      1979.0      2    0             2    18  \n","10  Subscriber  Female      1993.0      2    2             2     7  \n","11  Subscriber    Male      1964.0      1    6             1    15  \n","12  Subscriber    Male      1961.0      1    6             1    16  \n","13  Subscriber    Male      1985.0      5    1             5    15  \n","14  Subscriber    Male      1984.0      4    3             4    19  \n","\n","Would you like to see more? Enter yes or no.\n","no\n","\n","Would you like to restart? Enter yes or no.\n","yes\n","Hello! Let's explore some US bikeshare data!\n","\n","Choose a city (Chicago, New York City or Washington ): washington\n","Do you want to filter the month? (yes or no)\n","no\n","Ok! No month filter will be used. \n","\n","Do you want to filter the day of the week? (yes or no)\n","no\n","Ok! No month filter will be used. \n","\n","\n","Calculating The Most Frequent Times of Travel...\n","\n","Most Popular month: 6\n","Most Popular day of week: june\n","Most Popular day of week: tuesday\n","Most Popular Start Hour: 8\n","\n","This took 0.1409909725189209 seconds.\n","------------------------------------------------------------\n","\n","Calculating The Most Popular Stations and Trip...\n","\n","Most commonly used start station: Columbus Circle / Union Station\n","Most commonly used end station: Columbus Circle / Union Station\n","Most commonly used combination of stations: Jefferson Dr & 14th St SW to Jefferson Dr & 14th St SW\n","\n","This took 0.18196415901184082 seconds.\n","------------------------------------------------------------\n","\n","Calculating Trip Duration...\n","\n","The total travel time: 371183985.484\n","The mean travel time: 1237.2799516133334\n","\n","This took 0.003271341323852539 seconds.\n","------------------------------------------------------------\n","\n","Calculating User Stats...\n","\n","Subscriber    220786\n","Customer       79214\n","Name: User Type, dtype: int64\n","\n","This took 0.022492408752441406 seconds.\n","------------------------------------------------------------\n","Washington has no gender and birth data\n","\n","Would you like to see the raw data? Enter yes or no.\n","yes\n","   Unnamed: 0          Start Time             End Time  Trip Duration  \\\n","0     1621326 2017-06-21 08:36:34  2017-06-21 08:44:43        489.066   \n","1      482740 2017-03-11 10:40:00  2017-03-11 10:46:00        402.549   \n","2     1330037 2017-05-30 01:02:59  2017-05-30 01:13:37        637.251   \n","3      665458 2017-04-02 07:48:35  2017-04-02 08:19:03       1827.341   \n","4     1481135 2017-06-10 08:36:28  2017-06-10 09:02:17       1549.427   \n","\n","                                 Start Station                   End Station  \\\n","0                         14th & Belmont St NW                15th & K St NW   \n","1                   Yuma St & Tenley Circle NW  Connecticut Ave & Yuma St NW   \n","2               17th St & Massachusetts Ave NW                 5th & K St NW   \n","3             Constitution Ave & 2nd St NW/DOL    M St & Pennsylvania Ave NW   \n","4  Henry Bacon Dr & Lincoln Memorial Circle NW         Maine Ave & 7th St SW   \n","\n","    User Type  month  day  commum_month  hour  \n","0  Subscriber      6    2             6     8  \n","1  Subscriber      3    5             3    10  \n","2  Subscriber      5    1             5     1  \n","3    Customer      4    6             4     7  \n","4  Subscriber      6    5             6     8  \n","\n","Would you like to see more? Enter yes or no.\n","no\n","\n","Would you like to restart? Enter yes or no.\n","no\n"]}],"source":["import time\n","import pandas as pd\n","import numpy as np\n","\n","CITY_DATA = { 'chicago': 'chicago.csv',\n","              'new york city': 'new_york_city.csv',\n","              'washington': 'washington.csv' }\n","\n","def get_filters():\n","    \"\"\"\n","    Asks user to specify a city, month, and day to analyze.\n","    Returns:\n","        (str) city - name of the city to analyze\n","        (str) month - name of the month to filter by, or \"all\" to apply no month filter\n","        (str) day - name of the day of week to filter by, or \"all\" to apply no day filter\n","\n","    \"\"\"\n","    print('Hello! Let\\'s explore some US bikeshare data!\\n')\n","\n","    city = input('Choose a city (Chicago, New York City or Washington ): ').lower()\n","    while city not in ('chicago','new york city','washington'):\n","        print('\\nSorry, but you have to choose one of the cities: Chicago, New York City or Washington')\n","        city = input('Choose a city: ').lower()\n","    #--------------------------------------------------\n","\n","    month_filter = input('Do you want to filter the month? (yes or no)\\n').lower()\n","    while month_filter not in ('yes', 'no'):\n","        month_filter = input('You need to type yes or no for me to understand. Do you want to filter the month?\\n').lower()\n","\n","    if month_filter in ('no'):\n","      print('Ok! No month filter will be used. \\n')\n","      month = \"all\"\n","    else:\n","      month = input('Choose a month : ').lower()\n","      while month not in ('january', 'february', 'march', 'april', 'may', 'june'):\n","        print('\\nSorry, but you have to choose a month: january, february, march, april, may or june')\n","        month = input('Choose a month: ').lower()\n","\n","    #--------------------------------------------------\n","\n","    day_filter = input('Do you want to filter the day of the week? (yes or no)\\n').lower()\n","    while day_filter not in ('yes', 'no'):\n","        day_filter = input('You need to type yes or no for me to understand. Do you want to filter the day of the week?\\n').lower()\n","\n","    if day_filter in ('no'):\n","      print('Ok! No month filter will be used. \\n')\n","      day = \"all\"\n","    else:\n","      day = input('Choose a day of the week : ').lower()\n","      while day not in ('sunday', 'monday', 'tuesday', 'wednesday', 'thusday', 'friday', 'saturday'):\n","        print('\\nSorry, but you have to choose a day of the week: sunday, monday, tuesday, wednesday, thusday, friday, saturday')\n","        day = input('Choose a day of the week: ').lower()\n","        break\n","\n","    return city, month, day\n","\n","#--------------------------------------------------------------------------------------------------------------------------------------------------------\n","\n","def load_data(city, month, day):\n","\n","    \"\"\"\n","    Loads data for the specified city and filters by month and day if applicable.\n","\n","    Args:\n","        (str) city - name of the city to analyze\n","        (str) month - name of the month to filter by, or \"all\" to apply no month filter\n","        (str) day - name of the day of week to filter by, or \"all\" to apply no day filter\n","    Returns:\n","        df - Pandas DataFrame containing city data filtered by month and day\n","    \"\"\"\n","\n","    df = pd.read_csv(CITY_DATA[city])\n","\n","#----------------------------------\n","\n","    #extract month and day\n","    df['Start Time'] = pd.to_datetime(df['Start Time'])\n","    df['month'] = df['Start Time'].dt.month\n","    df['day'] = df['Start Time'].dt.dayofweek\n","\n","    if month != 'all':\n","        months = ['january', 'february', 'march', 'april', 'may', 'june']\n","        month = months.index(month) + 1\n","        df = df[df['month'] == month]\n","\n","    if day != 'all':\n","       days = ['sunday', 'monday', 'tuesday', 'wednesday', 'thusday', 'friday', 'saturday']\n","       day = days.index(day)\n","       df = df[df['day'] == day]\n","\n","    return df\n","\n","#------------------------------------------------------------------------------------------------------------------------------------------\n","\n","def time_stats(df):\n","    #Displays statistics on the most frequent times of travel.\n","\n","    print('\\nCalculating The Most Frequent Times of Travel...\\n')\n","    start_time = time.time()\n","\n","    # TO DO: display the most common month\n","    df['Start Time'] = pd.to_datetime(df['Start Time'])\n","    df['commum_month'] = df['Start Time'].dt.month\n","    popular_month = df['commum_month'].mode()[0]\n","    print('Most Popular month:', popular_month)\n","    if popular_month == 1:\n","      popular_txt_month='january'\n","    elif popular_month==2:\n","      popular_txt_month='february'\n","    elif popular_month==3:\n","      popular_txt_month='march'\n","    elif popular_month==4:\n","      popular_txt_month='april'\n","    elif popular_month==5:\n","      popular_txt_month='may'\n","    elif popular_month==6:\n","      popular_txt_month='june'\n","    print('Most Popular day of week:', popular_txt_month)\n","\n","    # TO DO: display the most common day of week\n","    df['Start Time'] = pd.to_datetime(df['Start Time'])\n","    df['day'] = df['Start Time'].dt.dayofweek\n","    popular_day = df['day'].mode()[0]\n","    if popular_day == 0:\n","      popular_txt_day='sunday'\n","    elif popular_day==1:\n","      popular_txt_day='monday'\n","    elif popular_day==2:\n","      popular_txt_day='tuesday'\n","    elif popular_day==3:\n","      popular_txt_day='wednesday'\n","    elif popular_day==4:\n","      popular_txt_day='thusday'\n","    elif popular_day==5:\n","      popular_txt_day='friday'\n","    elif popular_day==6:\n","      popular_txt_day='saturday'\n","    print('Most Popular day of week:', popular_txt_day)\n","\n","    # TO DO: display the most common start hour\n","    df['Start Time'] = pd.to_datetime(df['Start Time'])\n","    df['hour'] = df['Start Time'].dt.hour\n","    popular_hour = df['hour'].mode()[0]\n","    print('Most Popular Start Hour:', popular_hour)\n","\n","    print(\"\\nThis took %s seconds.\" % (time.time() - start_time))\n","\n","    print('-'*60)\n","\n","#------------------------------------------------------------------------------------------------------------------------------------------\n","def station_stats(df):\n","    #Displays statistics on the most popular stations and trip.\n","\n","    print('\\nCalculating The Most Popular Stations and Trip...\\n')\n","    start_time = time.time()\n","\n","    # TO DO: display most commonly used start station\n","    #start_station = df['Start Station'].value_counts()\n","    start_station = df['Start Station'].mode()[0]\n","#    start_station2 = df['Start Station'].value_counts()\n","    print('Most commonly used start station: {}'.format(start_station))\n","#    print('Most commonly used start station: {}'.format(start_station2))\n","\n","    # TO DO: display most commonly used end station\n","    end_station = df['End Station'].mode()[0]\n","#    end_station1 = df['End Station'].value_counts()\n","    print('Most commonly used end station: {}'.format(end_station))\n","#   print('Most commonly used end station: {}'.format(end_station1))\n","\n","    # TO DO: display most frequent combination of start station and end station trip\n","    path = (df['Start Station'] + ' to ' + df['End Station']).mode()[0]\n","    print('Most commonly used combination of stations: {}'.format(path))\n","\n","\n","    print(\"\\nThis took %s seconds.\" % (time.time() - start_time))\n","    print('-'*60)\n","\n","#------------------------------------------------------------------------------------------------------------------------------------------\n","\n","def user_stats(df):\n","#    Displays statistics on bikeshare users.\n","\n","    print('\\nCalculating User Stats...\\n')\n","    start_time = time.time()\n","\n","    # TO DO: Display counts of user types\n","    user_types = df['User Type'].value_counts()\n","    print(user_types)\n","\n","\n","    # TO DO: Display counts of gender\n","    gender = df['Gender'].value_counts()\n","    print(gender)\n","\n","    # TO DO: Display earliest, most recent, and most common year of birth\n","    earliest_birth = df['Birth Year'].min()\n","    print('Earliest year of birth: {}'.format(earliest_birth))\n","\n","    most_recent_birth = df['Birth Year'].max()\n","    print('Most recent year of birth: {}'.format(most_recent_birth))\n","\n","    most_common_birth = df['Birth Year'].mode()[0]\n","    print('Most recent year of birth: {}'.format(most_common_birth))\n","\n","    print(\"\\nThis took %s seconds.\" % (time.time() - start_time))\n","    print('-'*60)\n","\n","\n","\n","def user_stats_wash(df):\n","#    Displays statistics on bikeshare users.\n","\n","    print('\\nCalculating User Stats...\\n')\n","    start_time = time.time()\n","\n","    # TO DO: Display counts of user types\n","    user_types = df['User Type'].value_counts()\n","    print(user_types)\n","\n","\n","    print(\"\\nThis took %s seconds.\" % (time.time() - start_time))\n","\n","    print('-'*60)\n","\n","#------------------------------------------------------------------------------------------------------------------------------------------\n","\n","def trip_duration_stats(df):\n","\n"," #   Displays statistics on the total and average trip duration.\n","    print('\\nCalculating Trip Duration...\\n')\n","    start_time = time.time()\n","\n","    # TO DO: display total travel time\n","    sum_trip_duration= df['Trip Duration'].sum()\n","    print('The total travel time:', sum_trip_duration)\n","\n","    # TO DO: display mean travel time\n","    mean_trip_duration= df['Trip Duration'].mean()\n","    print('The mean travel time:', mean_trip_duration)\n","\n","    print(\"\\nThis took %s seconds.\" % (time.time() - start_time))\n","    print('-'*60)\n","\n","#------------------------------------------------------------------------------------------------------------------------------------------\n","\n","def main():\n","    while True:\n","      city, month, day = get_filters()\n","\n","      df = load_data(city, month, day)\n","\n","      time_stats(df)\n","      station_stats(df)\n","      trip_duration_stats(df)\n","\n","      if city in ('washington'):\n","        user_stats_wash(df)\n","        print('Washington has no gender and birth data')\n","      else:\n","        user_stats(df)\n","\n","      print_raw_data = input('\\nWould you like to see the raw data? Enter yes or no.\\n')\n","      if print_raw_data.lower() != 'no':\n","          print(df.head(5))\n","          print_raw_data_again = input('\\nWould you like to see more? Enter yes or no.\\n')\n","          N=1\n","          while print_raw_data_again =='yes':\n","            N=N+1\n"," #           for N in range(10000000):\n","            print(df.head(5*N))\n","            print_raw_data_again = input('\\nWould you like to see more? Enter yes or no.\\n')\n","\n","\n","      restart = input('\\nWould you like to restart? Enter yes or no.\\n')\n","      if restart.lower() != 'yes':\n","          break\n","\n","\n","#if __name__ == \"__main__\":\n","\n","\n","\n","\n","\n","\n","main()\n"]}],"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMQJ9tlLFjSNnwY+N3MW/Gp"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}